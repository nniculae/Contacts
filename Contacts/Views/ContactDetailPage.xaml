<Page
    x:Class="Contacts.Views.ContactDetailPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Model="using:Contacts.Core.Models"
    xmlns:controls="using:CommunityToolkit.WinUI.UI.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:h="using:Contacts.Helpers"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:sys="using:System"
    mc:Ignorable="d">

    <RelativePanel>
        <TextBlock
            x:Name="PageTitle"
            Style="{StaticResource PageTitleStyle}"
            Text="{x:Bind ViewModel.Contact.Name, Mode=OneWay}" />
        <CommandBar
            x:Name="MainCommandBar"
            HorizontalAlignment="Stretch"
            Background="Transparent"
            DefaultLabelPosition="Right"
            RelativePanel.AlignRightWithPanel="True">
            <AppBarButton
                Click="{x:Bind ViewModel.GoBack}"
                Icon="Back"
                Label="Back" />
            <AppBarButton
                x:Name="SaveButton"
                AllowFocusOnInteraction="True"
                Command="{x:Bind ViewModel.UpdateContactLabelsCommand}"
                Icon="Save"
                IsEnabled="{x:Bind h:Converters.Not(ViewModel.ContactValidator.HasErrors), Mode=OneWay}"
                Label="Save"
                Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}" />
            <AppBarButton
                Click="{x:Bind ViewModel.GoBack}"
                Icon="Cancel"
                Label="Cancel"
                Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}" />
            <AppBarSeparator Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}" />
            <AppBarButton
                Click="{x:Bind ViewModel.StartEdit}"
                Icon="Edit"
                IsEnabled="{x:Bind ViewModel.IsInEdit.Equals(x:False), Mode=OneWay}"
                Label="Edit"
                Visibility="{x:Bind h:Converters.CollapsedIf(ViewModel.IsNewContact), Mode=OneWay}" />
            <AppBarButton
                Command="{x:Bind ViewModel.RemoveCommand}"
                Icon="Delete"
                IsEnabled="{x:Bind ViewModel.IsInEdit.Equals(x:False), Mode=OneWay}"
                Label="Delete"
                Visibility="{x:Bind h:Converters.CollapsedIf(ViewModel.IsNewContact), Mode=OneWay}" />
        </CommandBar>
        <ScrollViewer
            x:Name="DetailPanel"
            RelativePanel.AlignLeftWithPanel="True"
            RelativePanel.AlignRightWithPanel="True"
            RelativePanel.Below="PageTitle"
            VerticalScrollBarVisibility="Auto"
            VerticalScrollMode="Auto">

            <StackPanel Margin="0,8,4,0">
                <StackPanel.Resources>
                    <Style TargetType="Expander">
                        <Setter Property="HorizontalAlignment" Value="Stretch" />
                        <Setter Property="HorizontalContentAlignment" Value="Left" />
                    </Style>
                </StackPanel.Resources>
                <Expander x:Name="GeneralExpander" IsExpanded="True">
                    <Expander.Header>
                        <Grid>
                            <TextBlock Style="{ThemeResource SubtitleTextBlockStyle}" Text="General" />
                        </Grid>
                    </Expander.Header>
                    <RelativePanel Margin="8,0,0,12">
                        <StackPanel
                            x:Name="FirstName"
                            Orientation="Vertical"
                            RelativePanel.AlignLeftWithPanel="True">
                            <TextBox
                                MinWidth="300"
                                Margin="0,8,16,8"
                                Header="First name"
                                IsReadOnly="{x:Bind h:Converters.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                Text="{x:Bind ViewModel.ContactValidator.FirstName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}" />
                            <StackPanel
                                Margin="0,4,0,0"
                                Orientation="Horizontal"
                                Visibility="{x:Bind h:Converters.CollapsedIfNullOrEmpty(ViewModel.ContactValidator.FirstNameErrors), Mode=OneWay}">
                                <FontIcon
                                    Margin="0,0,4,0"
                                    Foreground="Red"
                                    Glyph="&#xE783;" />
                                <TextBlock Foreground="Red" Text="{x:Bind ViewModel.ContactValidator.FirstNameErrors, Mode=OneWay}" />
                            </StackPanel>
                        </StackPanel>
                        <TextBox
                            x:Name="LastName"
                            MinWidth="300"
                            Margin="0,8,16,8"
                            Header="Last name"
                            IsReadOnly="{x:Bind h:Converters.Not(ViewModel.IsInEdit), Mode=OneWay}"
                            RelativePanel.RightOf="FirstName"
                            Text="{x:Bind ViewModel.Contact.LastName, Mode=TwoWay}"
                            Visibility="{x:Bind ViewModel.IsInEdit, Mode=OneWay}" />

                        <TextBox
                            x:Name="PhoneNumber"
                            MinWidth="300"
                            Margin="0,8,16,0"
                            Header="Phone"
                            InputScope="TelephoneNumber"
                            IsReadOnly="{x:Bind h:Converters.Not(ViewModel.IsInEdit), Mode=OneWay}"
                            RelativePanel.AlignLeftWithPanel="True"
                            RelativePanel.Below="FirstName"
                            Text="{x:Bind ViewModel.Contact.Phone, Mode=TwoWay}" />
                        <StackPanel
                            x:Name="EmailText"
                            Orientation="Vertical"
                            RelativePanel.Below="LastName"
                            RelativePanel.RightOf="PhoneNumber">
                            <TextBox
                                MinWidth="300"
                                Margin="0,8,16,0"
                                Header="Email"
                                InputScope="EmailNameOrAddress"
                                IsReadOnly="{x:Bind h:Converters.Not(ViewModel.IsInEdit), Mode=OneWay}"
                                Text="{x:Bind ViewModel.ContactValidator.Email, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <StackPanel
                                Margin="0,4,0,0"
                                Orientation="Horizontal"
                                Visibility="{x:Bind h:Converters.CollapsedIfNullOrEmpty(ViewModel.ContactValidator.EmailErrors), Mode=OneWay}">
                                <FontIcon
                                    Margin="0,0,4,0"
                                    Foreground="Red"
                                    Glyph="&#xE783;" />
                                <TextBlock Foreground="Red" Text="{x:Bind ViewModel.ContactValidator.EmailErrors, Mode=OneWay}" />
                            </StackPanel>
                        </StackPanel>
                    </RelativePanel>
                </Expander>
                <Expander x:Name="AddressExpander" IsExpanded="True">
                    <Expander.Header>
                        <Grid>
                            <TextBlock Style="{ThemeResource SubtitleTextBlockStyle}" Text="Address" />
                        </Grid>
                    </Expander.Header>

                    <RelativePanel Margin="8,0,0,12">
                        <TextBox
                            x:Name="Street"
                            MinWidth="300"
                            Margin="0,8,16,8"
                            Header="Street"
                            IsReadOnly="{x:Bind h:Converters.Not(ViewModel.IsInEdit), Mode=OneWay}"
                            RelativePanel.AlignLeftWithPanel="True"
                            Text="{x:Bind ViewModel.Contact.Address.Street, Mode=TwoWay}" />
                        <TextBox
                            x:Name="StreetNumber"
                            MinWidth="300"
                            Margin="0,8,16,8"
                            Header="Number"
                            IsReadOnly="{x:Bind h:Converters.Not(ViewModel.IsInEdit), Mode=OneWay}"
                            RelativePanel.RightOf="Street"
                            Text="{x:Bind ViewModel.Contact.Address.Number, Mode=TwoWay}" />

                        <TextBox
                            x:Name="ZipCode"
                            Grid.Row="1"
                            Grid.Column="1"
                            MinWidth="300"
                            Margin="0,8,16,0"
                            Header="ZipCode"
                            InputScope="AlphanumericFullWidth"
                            IsReadOnly="{x:Bind h:Converters.Not(ViewModel.IsInEdit), Mode=OneWay}"
                            RelativePanel.AlignLeftWithPanel="True"
                            RelativePanel.Below="Street"
                            Text="{x:Bind ViewModel.Contact.Address.ZipCode, Mode=TwoWay}" />
                        <TextBox
                            x:Name="City"
                            Grid.Column="2"
                            MinWidth="300"
                            Margin="0,8,16,0"
                            Header="City"
                            InputScope="AlphanumericFullWidth"
                            IsReadOnly="{x:Bind h:Converters.Not(ViewModel.IsInEdit), Mode=OneWay}"
                            RelativePanel.Below="Street"
                            RelativePanel.RightOf="ZipCode"
                            Text="{x:Bind ViewModel.Contact.Address.City, Mode=TwoWay}" />
                    </RelativePanel>

                </Expander>
                <Expander Name="Labels" IsExpanded="True">
                    <Expander.Header>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Style="{ThemeResource SubtitleTextBlockStyle}" Text="Labels" />
                            <Button
                                Margin="8,0,0,0"
                                
                                IsEnabled="{x:Bind ViewModel.IsInEdit, Mode=OneWay}"
                                ToolTipService.ToolTip="Manage labels">
                                <Button.Content>
                                    <FontIcon Glyph="&#xEB7E;" />
                                </Button.Content>
                                <Button.Flyout>
                                    <Flyout x:Name="ContactLabelFlyout" Placement="Right">
                                        <Flyout.FlyoutPresenterStyle>
                                            <Style TargetType="FlyoutPresenter">
                                                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
                                            </Style>
                                        </Flyout.FlyoutPresenterStyle>
                                        <Grid Padding="4">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="30" />
                                                <RowDefinition Height="*" />
                                                <RowDefinition Height="50" />
                                            </Grid.RowDefinitions>
                                            <TextBlock Grid.Row="0" Text="Manage labels" />
                                            <ListView
                                                x:Name="AllLabelsListView"
                                                Grid.Row="1"
                                                ItemsSource="{x:Bind ViewModel.AllLabels, Mode=OneWay}"
                                                Loaded="AllLabelsListView_Loaded"
                                                SelectionChanged="AllLabelsListView_SelectionChanged"
                                                SelectionMode="Multiple">
                                                <ListView.ItemTemplate>
                                                    <DataTemplate x:DataType="Model:Label">
                                                        <TextBlock Text="{x:Bind Name}" />
                                                    </DataTemplate>
                                                </ListView.ItemTemplate>
                                            </ListView>
                                            <Button
                                                Grid.Row="2"
                                                Click="ApplyLabelChanges_Click"
                                                Visibility="{x:Bind h:Converters.ToggleVisibility(createLabelButton.Visibility), Mode=OneWay}">
                                                Apply changes
                                            </Button>
                                            <Button
                                                x:Name="createLabelButton"
                                                Grid.Row="2"
                                                Click="createLabelButton_Click"
                                                Visibility="{x:Bind h:Converters.CollapsedIf(ViewModel.AreSelectedLabelsDifferent), Mode=OneWay}">
                                                <Button.Content>
                                                    <StackPanel Orientation="Horizontal">
                                                        <FontIcon Margin="0,0,12,0" Glyph="&#xE710;" />
                                                        <TextBlock Text="Create label" />
                                                    </StackPanel>
                                                </Button.Content>
                                            </Button>
                                        </Grid>
                                    </Flyout>
                                </Button.Flyout>
                            </Button>
                        </StackPanel>
                    </Expander.Header>
                    <ListBox x:Name="ContactLabelsListBox" ItemsSource="{x:Bind ViewModel.ContactLabels, Mode=OneWay}">
                        <ListBox.ItemTemplate>
                            <DataTemplate x:DataType="Model:Label">
                                <TextBlock Style="{StaticResource BodyStrongTextBlockStyle}" Text="{x:Bind Name}" />
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <controls:WrapPanel x:Name="WrapPanelControl" />
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                        <!--  Disable selection  -->

                    </ListBox>
                </Expander>
            </StackPanel>
        </ScrollViewer>
    </RelativePanel>
</Page>
